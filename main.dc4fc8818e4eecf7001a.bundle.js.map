{"version":3,"file":"main.dc4fc8818e4eecf7001a.bundle.js","sources":["webpack:///./src/types.ts"],"sourcesContent":["export enum events {\n  MESSAGE = \"message\",\n}\n\nexport enum actions {\n  HANDSHAKE_REQUEST = \"RIMLESS/HANDSHAKE_REQUEST\",\n  HANDSHAKE_REPLY = \"RIMLESS/HANDSHAKE_REPLY\",\n  RPC_REQUEST = \"RIMLESS/RPC_REQUEST\",\n  RPC_RESOLVE = \"RIMLESS/RPC_RESOLVE\",\n  RPC_REJECT = \"RIMLESS/RPC_REJECT\",\n}\n\nexport interface ISchema {\n  [prop: string]: any;\n}\n\nexport interface IConnections {\n  [connectionID: string]: ISchema;\n}\n\nexport interface IEvent extends EventListener {\n  source?: Window;\n  origin?: string;\n  data?: IHandshakeRequestPayload | IHandshakeConfirmationPayload | IRPCRequestPayload | IRPCResolvePayload;\n}\n\nexport interface IHandshakeRequestPayload {\n  action: actions.HANDSHAKE_REQUEST;\n  connectionID?: string;\n  methods: any[];\n  schema: ISchema;\n}\n\nexport interface IHandshakeConfirmationPayload {\n  action: actions.HANDSHAKE_REPLY;\n  connectionID: string;\n  methods: any[];\n  schema: ISchema;\n}\n\nexport interface IRPCRequestPayload {\n  action: actions.RPC_REQUEST;\n  args: any[];\n  callID: string;\n  callName: string;\n  connectionID?: string;\n}\n\nexport interface IRPCResolvePayload {\n  action: actions.RPC_RESOLVE | actions.RPC_REJECT;\n  result?: any;\n  error?: Error;\n  callID: string;\n  callName: string;\n  connectionID: string;\n}\n"],"mappings":"AAAA","sourceRoot":""}